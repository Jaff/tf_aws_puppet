#cloud-config
apt_sources:
 - source: "deb https://get.docker.io/ubuntu docker main"
   keyid: 36A1D7869245C8950F966E92D8576A8BA88D21E9
 - source: "deb http://apt.puppetlabs.com trusty main"
   keyid: 1054b7a24bd6ec30
apt_upgrade: true
locale: en_US.UTF-8
packages:
 - lxc-docker
 - puppet
 - git
 - traceroute
 - nmap
 - vim 
 - puppetmaster-passenger
 - python-pip
write_files:
-   path: /etc/apache2/ports.conf
    permissions: '0644'
    content: ""
-   path: /etc/apache2/sites-available/000-default.conf
    permissions: '0644'
    content: ""
-   path: /etc/apache2/sites-available/default-ssl.conf
    permissions: '0644'
    content: ""
-   path: /etc/puppet/puppet.conf
    permissions: '0444'
    content: |
        [main]
        logdir=/var/log/puppet
        vardir=/var/lib/puppet
        ssldir=/var/lib/puppet/ssl
        rundir=/var/run/puppet
        factpath=$vardir/lib/facter
        templatedir=$confdir/templates

        [master]
        node_terminus = exec
        external_nodes = /usr/local/bin/ec2_enc.rb
        # These are needed when the puppetmaster is run by passenger
        # and can safely be removed if webrick is used.
        ssl_client_header = SSL_CLIENT_S_DN
        ssl_client_verify_header = SSL_CLIENT_VERIFY
-   path: /etc/cron.d/puppet
    permissions: '0644'
    content: "*/30 * * * * root /usr/bin/puppet agent -t 2>&1 | logger -t puppete\n"
-   path: /etc/cron.d/puppetupdate
    permissions: '0644'
    content: "*/5 * * * * root /usr/local/sbin/puppetupdate 2>&1 | logger -t puppetupdate\n"
-   path: /usr/local/sbin/puppetupdate
    permissions: '0700'
    content: |
        #!/bin/sh
        #
        set -e
        cd /etc/puppet
        git fetch
        git reset --hard origin/master
        cd vendor
        r10k puppetfile install
-   path: /root/fixpuppetmaster.sh
    permissions: '0700'
    content: |
        #!/bin/bash
        /etc/init.d/apache2 stop;
        while [ $(ps aux |grep [P]assenger| grep -v bash | wc -l) -gt 0 ]; do sleep 1; done;
        puppet master &
        sleep 5
        kill $(ps aux | grep '[p]uppet master' | awk '{print $2}')
        sleep 5
        /etc/init.d/apache2 start
-   path: /usr/local/bin/autosign.rb
    permissions: '0755'
    content: |
        #!/usr/bin/ruby

        # Copyright 2014 Jeremy T. Bouse
        #
        # Licensed under the Apache License, Version 2.0 (the "License");
        # you may not use this file except in compliance with the License.
        # You may obtain a copy of the License at
        #
        #     http://www.apache.org/licenses/LICENSE-2.0
        #
        # Unless required by applicable law or agreed to in writing, software
        # distributed under the License is distributed on an "AS IS" BASIS,
        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        # See the License for the specific language governing permissions and
        # limitations under the License.
        require 'rubygems'
        require 'aws-sdk'
        require 'puppet'
        require 'puppet/ssl/certificate_request'

        clientcert = ARGV.pop

        csr = Puppet::SSL::CertificateRequest.from_s(STDIN.read)

        retcode = 0
        Aws.config.update({region: 'eu-central-1', credentials: Aws::InstanceProfileCredentials.new})
        ec2 = Aws::EC2::Client.new
        server = begin
          ec2.describe_instances( filters: [{name: 'private-dns-name', values: [clientcert]}]).data['reservations'][0]['instances'][0]
        rescue Exception => e
          puts "Could not find host #{host_name}: #{e}"
        end

        if csr.name != clientcert
          retcode = 1
        elsif not server
          retcode = 2
        elsif server.state.name != 'running'
          retcode = 3
        end

        exit retcode 
-   path: /usr/local/bin/ec2_enc.rb
    permissions: '0755'
    content: |
        #!/usr/bin/ruby
        require 'rubygems'
        require 'logger'
        require 'aws-sdk'
        require 'yaml'

        def find_instance(host_name)

          if (not host_name)
            puts 'Usage: ec2_enc.rb <host_name>'
            puts 'The parameter host_name must not be empty'
            exit 1
          end

          Aws.config.update({region: 'eu-central-1', credentials: Aws::InstanceProfileCredentials.new})
          ec2 = Aws::EC2::Client.new

          environment = 'production'
          role = 'unknown'
          params = {}
          instance = begin
            ec2.describe_instances( filters: [{name: 'private-dns-name', values: [host_name]}]).data['reservations'][0]['instances'][0]
          rescue Exception => e
            puts "Could not find host #{host_name}: #{e}"
            exit 1
          end
          tags = {}
          instance['tags'].each { |tag| tags[tag['key']] = tag['value'] }
          enc = Hash.new
          tags.each do |key, value|
            if key == 'puppet_role'
              role = value
            end
            if key == 'puppet_role_params'
              params = params.merge(params, JSON.parse(value))
            end
            if key == 'puppet_environment'
              environment = value
            end
          end 

          return {
            'classes' => { "role::#{role}" => params },
            'environment' => environment
          }.to_yaml

          puts "Unknown host with name #{host_name}."
          exit 1
        end
        puts find_instance(ARGV[0])

runcmd:
 - [ /bin/dd, if=/dev/zero, of=/swap, bs=1M, count=2048 ]
 - [ /sbin/mkswap, /swap ]
 - [ /bin/bash, -c, "echo /swap none swap sw 0 0 >> /etc/fstab" ]
 - [ /sbin/swapon, -a ]
 - [ /usr/bin/gem, install, aws-sdk ]
 - [ /usr/bin/gem, install, r10k ]
 - [ /usr/bin/pip, install, awscli ]
 - [ /bin/bash, -c, "/usr/bin/puppet resource host puppet ensure=present ip=$(facter ipaddress_eth0)" ]
 - [ rm, -rf, /etc/puppet ]
 - [ git, clone, "__REPOSITORY__", /etc/puppet ]
 - [ /usr/local/sbin/puppetupdate ]
 - [ /root/fixpuppetmaster.sh ]
 - [ /usr/bin/puppet, agent, -t ]

